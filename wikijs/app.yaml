apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"wikijs"}}
    name: wikijs
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"wiki","app.kubernetes.io/version":"latest","helm.sh/chart":"wiki-2.1.0"},"name":"wikiji","namespace":"wikijs"}}
    labels:
      app.kubernetes.io/instance: wikiji
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: wiki
      app.kubernetes.io/version: latest
      helm.sh/chart: wiki-2.1.0
    name: wikiji
    namespace: wikijs
- apiVersion: v1
  data:
    postgresql-password: c3loN0U2WW1CVQ==
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"postgresql-password":"c3loN0U2WW1CVQ=="},"kind":"Secret","metadata":{"annotations":{},"labels":{"app":"postgresql","chart":"postgresql-6.5.0","heritage":"Helm","release":"wikiji"},"name":"wikiji-postgresql","namespace":"wikijs"},"type":"Opaque"}
    labels:
      app: postgresql
      chart: postgresql-6.5.0
      heritage: Helm
      release: wikiji
    name: wikiji-postgresql
    namespace: wikijs
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"postgresql","chart":"postgresql-6.5.0","heritage":"Helm","release":"wikiji"},"name":"wikiji-postgresql-headless","namespace":"wikijs"},"spec":{"clusterIP":"None","ports":[{"name":"postgresql","port":5432,"targetPort":"postgresql"}],"selector":{"app":"postgresql","release":"wikiji"},"type":"ClusterIP"}}
    labels:
      app: postgresql
      chart: postgresql-6.5.0
      heritage: Helm
      release: wikiji
    name: wikiji-postgresql-headless
    namespace: wikijs
  spec:
    clusterIP: None
    ports:
    - name: postgresql
      port: 5432
      targetPort: postgresql
    selector:
      app: postgresql
      release: wikiji
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"postgresql","chart":"postgresql-6.5.0","heritage":"Helm","release":"wikiji"},"name":"wikiji-postgresql","namespace":"wikijs"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":"postgresql"}],"selector":{"app":"postgresql","release":"wikiji","role":"master"},"type":"ClusterIP"}}
    labels:
      app: postgresql
      chart: postgresql-6.5.0
      heritage: Helm
      release: wikiji
    name: wikiji-postgresql
    namespace: wikijs
  spec:
    ports:
    - name: postgresql
      port: 5432
      targetPort: postgresql
    selector:
      app: postgresql
      release: wikiji
      role: master
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"wiki","app.kubernetes.io/version":"latest","helm.sh/chart":"wiki-2.1.0"},"name":"wikiji","namespace":"wikijs"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":"http"},{"name":"https","port":443,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/name":"wiki"},"type":"ClusterIP"}}
    labels:
      app.kubernetes.io/instance: wikiji
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: wiki
      app.kubernetes.io/version: latest
      helm.sh/chart: wiki-2.1.0
    name: wikiji
    namespace: wikijs
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: wikiji
      app.kubernetes.io/name: wiki
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"wiki","app.kubernetes.io/version":"latest","helm.sh/chart":"wiki-2.1.0"},"name":"wikiji","namespace":"wikijs"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/name":"wiki"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/name":"wiki"}},"spec":{"containers":[{"env":[{"name":"DB_TYPE","value":"postgres"},{"name":"DB_HOST","value":"wikiji-postgresql"},{"name":"DB_PORT","value":"5432"},{"name":"DB_NAME","value":"wiki"},{"name":"DB_USER","value":"postgres"},{"name":"DB_PASS","valueFrom":{"secretKeyRef":{"key":"postgresql-password","name":"wikiji-postgresql"}}}],"image":"requarks/wiki:latest","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"http"}},"name":"wiki","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":"http"}},"resources":{},"securityContext":{}}],"securityContext":{},"serviceAccountName":"wikiji"}}}}
    labels:
      app.kubernetes.io/instance: wikiji
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: wiki
      app.kubernetes.io/version: latest
      helm.sh/chart: wiki-2.1.0
    name: wikiji
    namespace: wikijs
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: wikiji
        app.kubernetes.io/name: wiki
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: wikiji
          app.kubernetes.io/name: wiki
      spec:
        containers:
        - env:
          - name: DB_TYPE
            value: postgres
          - name: DB_HOST
            value: wikiji-postgresql
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: wiki
          - name: DB_USER
            value: postgres
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: wikiji-postgresql
          image: requarks/wiki:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          name: wiki
          ports:
          - containerPort: 3000
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources: {}
          securityContext: {}
        securityContext: {}
        serviceAccountName: wikiji
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"postgresql","chart":"postgresql-6.5.0","heritage":"Helm","release":"wikiji"},"name":"wikiji-postgresql","namespace":"wikijs"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgresql","release":"wikiji","role":"master"}},"serviceName":"wikiji-postgresql-headless","template":{"metadata":{"labels":{"app":"postgresql","chart":"postgresql-6.5.0","heritage":"Helm","release":"wikiji","role":"master"},"name":"wikiji-postgresql"},"spec":{"containers":[{"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"POSTGRESQL_PORT_NUMBER","value":"5432"},{"name":"POSTGRESQL_VOLUME_DIR","value":"/bitnami/postgresql"},{"name":"PGDATA","value":"/bitnami/postgresql/data"},{"name":"POSTGRES_USER","value":"postgres"},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"postgresql-password","name":"wikiji-postgresql"}}},{"name":"POSTGRES_DB","value":"wiki"}],"image":"docker.io/bitnami/postgresql:11.5.0-debian-9-r60","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["sh","-c","exec pg_isready -U \"postgres\" -d \"wiki\" -h 127.0.0.1 -p 5432"]},"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"wikiji-postgresql","ports":[{"containerPort":5432,"name":"postgresql"}],"readinessProbe":{"exec":{"command":["sh","-c","-e","pg_isready -U \"postgres\" -d \"wiki\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ]\n"]},"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"runAsUser":1001},"volumeMounts":[{"mountPath":"/bitnami/postgresql","name":"data","subPath":null}]}],"initContainers":[{"command":["sh","-c","mkdir -p /bitnami/postgresql/data\nchmod 700 /bitnami/postgresql/data\nfind /bitnami/postgresql -mindepth 0 -maxdepth 1 -not -name \".snapshot\" -not -name \"lost+found\" | \\\n  xargs chown -R 1001:1001\n"],"image":"docker.io/bitnami/minideb:stretch","imagePullPolicy":"Always","name":"init-chmod-data","resources":{"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"runAsUser":0},"volumeMounts":[{"mountPath":"/bitnami/postgresql","name":"data","subPath":null}]}],"securityContext":{"fsGroup":1001},"volumes":null}},"updateStrategy":{"type":"RollingUpdate"},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}}}}]}}
    labels:
      app: postgresql
      chart: postgresql-6.5.0
      heritage: Helm
      release: wikiji
    name: wikiji-postgresql
    namespace: wikijs
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgresql
        release: wikiji
        role: master
    serviceName: wikiji-postgresql-headless
    template:
      metadata:
        labels:
          app: postgresql
          chart: postgresql-6.5.0
          heritage: Helm
          release: wikiji
          role: master
        name: wikiji-postgresql
      spec:
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: wikiji-postgresql
          - name: POSTGRES_DB
            value: wiki
          image: docker.io/bitnami/postgresql:11.5.0-debian-9-r60
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: wikiji-postgresql
          ports:
          - containerPort: 5432
            name: postgresql
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - -e
              - |
                pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
          - mountPath: /bitnami/postgresql
            name: data
            subPath: null
        initContainers:
        - command:
          - sh
          - -c
          - |
            mkdir -p /bitnami/postgresql/data
            chmod 700 /bitnami/postgresql/data
            find /bitnami/postgresql -mindepth 0 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | \
              xargs chown -R 1001:1001
          image: docker.io/bitnami/minideb:stretch
          imagePullPolicy: Always
          name: init-chmod-data
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 0
          volumeMounts:
          - mountPath: /bitnami/postgresql
            name: data
            subPath: null
        securityContext:
          fsGroup: 1001
        volumes: null
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helm.sh/hook: test-success
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"helm.sh/hook":"test-success"},"labels":{"app.kubernetes.io/instance":"wikiji","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"wiki","app.kubernetes.io/version":"latest","helm.sh/chart":"wiki-2.1.0"},"name":"wikiji-test-connection","namespace":"wikijs"},"spec":{"containers":[{"args":["wikiji:80"],"command":["wget"],"image":"busybox","name":"wget"}],"restartPolicy":"Never"}}
    labels:
      app.kubernetes.io/instance: wikiji
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: wiki
      app.kubernetes.io/version: latest
      helm.sh/chart: wiki-2.1.0
    name: wikiji-test-connection
    namespace: wikijs
  spec:
    containers:
    - args:
      - wikiji:80
      command:
      - wget
      image: busybox
      name: wget
    restartPolicy: Never
kind: List
metadata: {}
